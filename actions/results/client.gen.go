// Package results provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package results

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"net/url"
	"strings"
)

// PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONBody defines parameters for PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdate.
type PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONBody struct {
	ChangeOrder *float32 `json:"change_order,omitempty"`
	Steps       *[]struct {
		CompletedAt *map[string]interface{} `json:"completed_at"`
		Conclusion  *float32                `json:"conclusion,omitempty"`
		ExternalId  *string                 `json:"external_id,omitempty"`
		Name        *string                 `json:"name,omitempty"`
		Number      *float32                `json:"number,omitempty"`
		StartedAt   *string                 `json:"started_at,omitempty"`
		Status      *float32                `json:"status,omitempty"`
	} `json:"steps,omitempty"`
	WorkflowJobRunBackendId *string `json:"workflow_job_run_backend_id,omitempty"`
	WorkflowRunBackendId    *string `json:"workflow_run_backend_id,omitempty"`
}

// PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONBody defines parameters for PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadata.
type PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONBody struct {
	LineCount               *float32 `json:"line_count,omitempty"`
	UploadedAt              *string  `json:"uploaded_at,omitempty"`
	WorkflowJobRunBackendId *string  `json:"workflow_job_run_backend_id,omitempty"`
	WorkflowRunBackendId    *string  `json:"workflow_run_backend_id,omitempty"`
}

// PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONBody defines parameters for PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadata.
type PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONBody struct {
	LineCount               *float32 `json:"line_count,omitempty"`
	StepBackendId           *string  `json:"step_backend_id,omitempty"`
	UploadedAt              *string  `json:"uploaded_at,omitempty"`
	WorkflowJobRunBackendId *string  `json:"workflow_job_run_backend_id,omitempty"`
	WorkflowRunBackendId    *string  `json:"workflow_run_backend_id,omitempty"`
}

// PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONBody defines parameters for PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadata.
type PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONBody struct {
	Size                    *string `json:"size,omitempty"`
	StepBackendId           *string `json:"step_backend_id,omitempty"`
	UploadedAt              *string `json:"uploaded_at,omitempty"`
	WorkflowJobRunBackendId *string `json:"workflow_job_run_backend_id,omitempty"`
	WorkflowRunBackendId    *string `json:"workflow_run_backend_id,omitempty"`
}

// PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONBody defines parameters for PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURL.
type PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONBody struct {
	WorkflowJobRunBackendId *string `json:"workflow_job_run_backend_id,omitempty"`
	WorkflowRunBackendId    *string `json:"workflow_run_backend_id,omitempty"`
}

// PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONBody defines parameters for PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURL.
type PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONBody struct {
	WorkflowJobRunBackendId *string `json:"workflow_job_run_backend_id,omitempty"`
	WorkflowRunBackendId    *string `json:"workflow_run_backend_id,omitempty"`
}

// PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONBody defines parameters for PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURL.
type PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONBody struct {
	StepBackendId           *string `json:"step_backend_id,omitempty"`
	WorkflowJobRunBackendId *string `json:"workflow_job_run_backend_id,omitempty"`
	WorkflowRunBackendId    *string `json:"workflow_run_backend_id,omitempty"`
}

// PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONBody defines parameters for PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURL.
type PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONBody struct {
	StepBackendId           *string `json:"step_backend_id,omitempty"`
	WorkflowJobRunBackendId *string `json:"workflow_job_run_backend_id,omitempty"`
	WorkflowRunBackendId    *string `json:"workflow_run_backend_id,omitempty"`
}

// PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONRequestBody defines body for PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdate for application/json ContentType.
type PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONRequestBody PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONBody

// PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONRequestBody defines body for PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadata for application/json ContentType.
type PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONRequestBody PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONBody

// PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONRequestBody defines body for PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadata for application/json ContentType.
type PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONRequestBody PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONBody

// PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONRequestBody defines body for PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadata for application/json ContentType.
type PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONRequestBody PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONBody

// PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONRequestBody defines body for PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURL for application/json ContentType.
type PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONRequestBody PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONBody

// PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONRequestBody defines body for PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURL for application/json ContentType.
type PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONRequestBody PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONBody

// PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONRequestBody defines body for PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURL for application/json ContentType.
type PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONRequestBody PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONBody

// PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONRequestBody defines body for PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURL for application/json ContentType.
type PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONRequestBody PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONBody

// RequestEditorFn  is the function signature for the RequestEditor callback function
type RequestEditorFn func(ctx context.Context, req *http.Request) error

// Doer performs HTTP requests.
//
// The standard http.Client implements this interface.
type HttpRequestDoer interface {
	Do(req *http.Request) (*http.Response, error)
}

// Client which conforms to the OpenAPI3 specification for this service.
type Client struct {
	// The endpoint of the server conforming to this interface, with scheme,
	// https://api.deepmap.com for example. This can contain a path relative
	// to the server, such as https://api.deepmap.com/dev-test, and all the
	// paths in the swagger spec will be appended to the server.
	Server string

	// Doer for performing requests, typically a *http.Client with any
	// customized settings, such as certificate chains.
	Client HttpRequestDoer

	// A list of callbacks for modifying requests which are generated before sending over
	// the network.
	RequestEditors []RequestEditorFn
}

// ClientOption allows setting custom parameters during construction
type ClientOption func(*Client) error

// Creates a new Client, with reasonable defaults
func NewClient(server string, opts ...ClientOption) (*Client, error) {
	// create a client with sane default values
	client := Client{
		Server: server,
	}
	// mutate client and add all optional params
	for _, o := range opts {
		if err := o(&client); err != nil {
			return nil, err
		}
	}
	// ensure the server URL always has a trailing slash
	if !strings.HasSuffix(client.Server, "/") {
		client.Server += "/"
	}
	// create httpClient, if not already present
	if client.Client == nil {
		client.Client = &http.Client{}
	}
	return &client, nil
}

// WithHTTPClient allows overriding the default Doer, which is
// automatically created using http.Client. This is useful for tests.
func WithHTTPClient(doer HttpRequestDoer) ClientOption {
	return func(c *Client) error {
		c.Client = doer
		return nil
	}
}

// WithRequestEditorFn allows setting up a callback function, which will be
// called right before sending the request. This can be used to mutate the request.
func WithRequestEditorFn(fn RequestEditorFn) ClientOption {
	return func(c *Client) error {
		c.RequestEditors = append(c.RequestEditors, fn)
		return nil
	}
}

// The interface specification for the client above.
type ClientInterface interface {
	// GetWsIngestSock request
	GetWsIngestSock(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithBody request with any body
	PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdate(ctx context.Context, body PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithBody request with any body
	PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadata(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithBody request with any body
	PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadata(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithBody request with any body
	PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadata(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithBody request with any body
	PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURL(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithBody request with any body
	PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURL(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithBody request with any body
	PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURL(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithBody request with any body
	PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURL(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)
}

func (c *Client) GetWsIngestSock(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetWsIngestSockRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdate(ctx context.Context, body PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadata(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadata(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadata(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURL(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURL(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURL(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURL(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

// NewGetWsIngestSockRequest generates requests for GetWsIngestSock
func NewGetWsIngestSockRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/_ws/ingest.sock")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateRequest calls the generic PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdate builder with application/json body
func NewPostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateRequest(server string, body PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateRequestWithBody(server, "application/json", bodyReader)
}

// NewPostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateRequestWithBody generates requests for PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdate with any type of body
func NewPostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/twirp/github.actions.results.api.v1.WorkflowStepUpdateService/WorkflowStepsUpdate")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewPostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataRequest calls the generic PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadata builder with application/json body
func NewPostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataRequest(server string, body PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataRequestWithBody(server, "application/json", bodyReader)
}

// NewPostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataRequestWithBody generates requests for PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadata with any type of body
func NewPostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/twirp/results.services.receiver.Receiver/CreateJobLogsMetadata")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewPostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataRequest calls the generic PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadata builder with application/json body
func NewPostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataRequest(server string, body PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataRequestWithBody(server, "application/json", bodyReader)
}

// NewPostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataRequestWithBody generates requests for PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadata with any type of body
func NewPostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/twirp/results.services.receiver.Receiver/CreateStepLogsMetadata")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewPostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataRequest calls the generic PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadata builder with application/json body
func NewPostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataRequest(server string, body PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataRequestWithBody(server, "application/json", bodyReader)
}

// NewPostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataRequestWithBody generates requests for PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadata with any type of body
func NewPostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/twirp/results.services.receiver.Receiver/CreateStepSummaryMetadata")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewPostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLRequest calls the generic PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURL builder with application/json body
func NewPostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLRequest(server string, body PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLRequestWithBody(server, "application/json", bodyReader)
}

// NewPostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLRequestWithBody generates requests for PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURL with any type of body
func NewPostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/twirp/results.services.receiver.Receiver/GetJobDiagLogsSignedBlobURL")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewPostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLRequest calls the generic PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURL builder with application/json body
func NewPostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLRequest(server string, body PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLRequestWithBody(server, "application/json", bodyReader)
}

// NewPostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLRequestWithBody generates requests for PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURL with any type of body
func NewPostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/twirp/results.services.receiver.Receiver/GetJobLogsSignedBlobURL")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewPostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLRequest calls the generic PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURL builder with application/json body
func NewPostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLRequest(server string, body PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLRequestWithBody(server, "application/json", bodyReader)
}

// NewPostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLRequestWithBody generates requests for PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURL with any type of body
func NewPostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/twirp/results.services.receiver.Receiver/GetStepLogsSignedBlobURL")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewPostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLRequest calls the generic PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURL builder with application/json body
func NewPostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLRequest(server string, body PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLRequestWithBody(server, "application/json", bodyReader)
}

// NewPostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLRequestWithBody generates requests for PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURL with any type of body
func NewPostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/twirp/results.services.receiver.Receiver/GetStepSummarySignedBlobURL")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

func (c *Client) applyEditors(ctx context.Context, req *http.Request, additionalEditors []RequestEditorFn) error {
	for _, r := range c.RequestEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	for _, r := range additionalEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	return nil
}

// ClientWithResponses builds on ClientInterface to offer response payloads
type ClientWithResponses struct {
	ClientInterface
}

// NewClientWithResponses creates a new ClientWithResponses, which wraps
// Client with return type handling
func NewClientWithResponses(server string, opts ...ClientOption) (*ClientWithResponses, error) {
	client, err := NewClient(server, opts...)
	if err != nil {
		return nil, err
	}
	return &ClientWithResponses{client}, nil
}

// WithBaseURL overrides the baseURL.
func WithBaseURL(baseURL string) ClientOption {
	return func(c *Client) error {
		newBaseURL, err := url.Parse(baseURL)
		if err != nil {
			return err
		}
		c.Server = newBaseURL.String()
		return nil
	}
}

// ClientWithResponsesInterface is the interface specification for the client with responses above.
type ClientWithResponsesInterface interface {
	// GetWsIngestSockWithResponse request
	GetWsIngestSockWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetWsIngestSockResponse, error)

	// PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithBodyWithResponse request with any body
	PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse, error)

	PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithResponse(ctx context.Context, body PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse, error)

	// PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithBodyWithResponse request with any body
	PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse, error)

	PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse, error)

	// PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithBodyWithResponse request with any body
	PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse, error)

	PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse, error)

	// PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithBodyWithResponse request with any body
	PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse, error)

	PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse, error)

	// PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithBodyWithResponse request with any body
	PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse, error)

	PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse, error)

	// PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithBodyWithResponse request with any body
	PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse, error)

	PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse, error)

	// PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithBodyWithResponse request with any body
	PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse, error)

	PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse, error)

	// PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithBodyWithResponse request with any body
	PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse, error)

	PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse, error)
}

type GetWsIngestSockResponse struct {
	Body         []byte
	HTTPResponse *http.Response
}

// Status returns HTTPResponse.Status
func (r GetWsIngestSockResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetWsIngestSockResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Ok *bool `json:"ok,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Ok *bool `json:"ok,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Ok *bool `json:"ok,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Ok *bool `json:"ok,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		BlobStorageType *string `json:"blob_storage_type,omitempty"`
		DiagLogsUrl     *string `json:"diag_logs_url,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		BlobStorageType *string `json:"blob_storage_type,omitempty"`
		LogsUrl         *string `json:"logs_url,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		BlobStorageType *string `json:"blob_storage_type,omitempty"`
		LogsUrl         *string `json:"logs_url,omitempty"`
		SoftSizeLimit   *string `json:"soft_size_limit,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		BlobStorageType *string `json:"blob_storage_type,omitempty"`
		SoftSizeLimit   *string `json:"soft_size_limit,omitempty"`
		SummaryUrl      *string `json:"summary_url,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

// GetWsIngestSockWithResponse request returning *GetWsIngestSockResponse
func (c *ClientWithResponses) GetWsIngestSockWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetWsIngestSockResponse, error) {
	rsp, err := c.GetWsIngestSock(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetWsIngestSockResponse(rsp)
}

// PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithBodyWithResponse request with arbitrary body returning *PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse
func (c *ClientWithResponses) PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse, error) {
	rsp, err := c.PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse(rsp)
}

func (c *ClientWithResponses) PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithResponse(ctx context.Context, body PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse, error) {
	rsp, err := c.PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdate(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse(rsp)
}

// PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithBodyWithResponse request with arbitrary body returning *PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse
func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse(rsp)
}

func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadata(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse(rsp)
}

// PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithBodyWithResponse request with arbitrary body returning *PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse
func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse(rsp)
}

func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadata(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse(rsp)
}

// PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithBodyWithResponse request with arbitrary body returning *PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse
func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse(rsp)
}

func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadata(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse(rsp)
}

// PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithBodyWithResponse request with arbitrary body returning *PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse
func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse(rsp)
}

func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURL(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse(rsp)
}

// PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithBodyWithResponse request with arbitrary body returning *PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse
func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse(rsp)
}

func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURL(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse(rsp)
}

// PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithBodyWithResponse request with arbitrary body returning *PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse
func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse(rsp)
}

func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURL(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse(rsp)
}

// PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithBodyWithResponse request with arbitrary body returning *PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse
func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse(rsp)
}

func (c *ClientWithResponses) PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithResponse(ctx context.Context, body PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLJSONRequestBody, reqEditors ...RequestEditorFn) (*PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse, error) {
	rsp, err := c.PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURL(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse(rsp)
}

// ParseGetWsIngestSockResponse parses an HTTP response from a GetWsIngestSockWithResponse call
func ParseGetWsIngestSockResponse(rsp *http.Response) (*GetWsIngestSockResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetWsIngestSockResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	return response, nil
}

// ParsePostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse parses an HTTP response from a PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateWithResponse call
func ParsePostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse(rsp *http.Response) (*PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostTwirpGithubActionsResultsApiV1WorkflowStepUpdateServiceWorkflowStepsUpdateResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Ok *bool `json:"ok,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}

// ParsePostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse parses an HTTP response from a PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataWithResponse call
func ParsePostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse(rsp *http.Response) (*PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostTwirpResultsServicesReceiverReceiverCreateJobLogsMetadataResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Ok *bool `json:"ok,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}

// ParsePostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse parses an HTTP response from a PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataWithResponse call
func ParsePostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse(rsp *http.Response) (*PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostTwirpResultsServicesReceiverReceiverCreateStepLogsMetadataResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Ok *bool `json:"ok,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}

// ParsePostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse parses an HTTP response from a PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataWithResponse call
func ParsePostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse(rsp *http.Response) (*PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostTwirpResultsServicesReceiverReceiverCreateStepSummaryMetadataResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Ok *bool `json:"ok,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}

// ParsePostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse parses an HTTP response from a PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLWithResponse call
func ParsePostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse(rsp *http.Response) (*PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostTwirpResultsServicesReceiverReceiverGetJobDiagLogsSignedBlobURLResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			BlobStorageType *string `json:"blob_storage_type,omitempty"`
			DiagLogsUrl     *string `json:"diag_logs_url,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}

// ParsePostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse parses an HTTP response from a PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLWithResponse call
func ParsePostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse(rsp *http.Response) (*PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostTwirpResultsServicesReceiverReceiverGetJobLogsSignedBlobURLResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			BlobStorageType *string `json:"blob_storage_type,omitempty"`
			LogsUrl         *string `json:"logs_url,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}

// ParsePostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse parses an HTTP response from a PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLWithResponse call
func ParsePostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse(rsp *http.Response) (*PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostTwirpResultsServicesReceiverReceiverGetStepLogsSignedBlobURLResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			BlobStorageType *string `json:"blob_storage_type,omitempty"`
			LogsUrl         *string `json:"logs_url,omitempty"`
			SoftSizeLimit   *string `json:"soft_size_limit,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}

// ParsePostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse parses an HTTP response from a PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLWithResponse call
func ParsePostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse(rsp *http.Response) (*PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostTwirpResultsServicesReceiverReceiverGetStepSummarySignedBlobURLResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			BlobStorageType *string `json:"blob_storage_type,omitempty"`
			SoftSizeLimit   *string `json:"soft_size_limit,omitempty"`
			SummaryUrl      *string `json:"summary_url,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}
